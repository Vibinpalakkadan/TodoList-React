{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","toDos","SetToDos","toDo","SetToDo","className","value","onChange","e","target","type","placeholder","onClick","id","Date","now","text","status","map","obj","console","log","checked","filter","obj2","name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NA0DeA,MAvDf,WACE,MAAyBC,mBAAU,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAsBF,mBAAS,IAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KACA,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,cAAf,SACE,6CAEF,sBAAKA,UAAU,aAAf,UACE,uBACA,4EAEF,sBAAKA,UAAU,QAAf,UACE,uBAAOC,MAAOH,EAAMI,SAAU,SAACC,GAAD,OAAKJ,EAAQI,EAAEC,OAAOH,QAAQI,KAAK,OAAOC,YAAY,mCAEpF,mBAAGC,QAAS,kBAAIV,EAAS,GAAD,mBAAKD,GAAL,CAAW,CAAEY,GAAGC,KAAKC,MAAMC,KAAMb,EAAMc,QAAO,OAAUZ,UAAU,mBAG5F,sBAAKA,UAAU,QAAf,UAEEJ,EAAMiB,KAAI,SAACC,GAEX,OAAS,sBAAKd,UAAU,OAAf,UACP,sBAAKA,UAAU,OAAf,UACE,uBAAOE,SAAU,SAACC,GAChBY,QAAQC,IAAIb,EAAEC,OAAOa,SACrBF,QAAQC,IAAIF,GAChBjB,EAASD,EAAMsB,QAAO,SAAAC,GAItB,OAHGA,EAAKX,KAAKM,EAAIN,KACfW,EAAKP,OAAOT,EAAEC,OAAOa,SAEhBE,OAELlB,MAAOa,EAAIF,OAAQP,KAAK,WAAWe,KAAK,GAAGZ,GAAG,KAC9C,4BAAIM,EAAIH,UAGV,qBAAKX,UAAU,QAAf,SACE,mBAAGA,UAAU,yBAMhBJ,EAAMiB,KAAI,SAACC,GACV,OAAGA,EAAIF,OACE,6BAAKE,EAAIH,OAEX,eCvCFU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4b6a0819.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { useState,date,now,value } from 'react';\nfunction App() {\n  const [toDos, SetToDos]= useState ([])\n  const [toDo,SetToDo]= useState('')//given an empty string\n  return (\n    <div className=\"app\">\n      <div className=\"mainHeading\">\n        <h1>ToDo List</h1>\n      </div>\n      <div className=\"subHeading\">\n        <br />\n        <h2>\"Ooo,it's Wednesdayüåù‚òï\"</h2>\n      </div>\n      <div className=\"input\">\n        <input value={toDo} onChange={(e)=>SetToDo(e.target.value)} type=\"text\" placeholder=\"üñäÔ∏è Add item...\" /> \n        {/* Creating an stage to maintain data (toDo) to store changes in the components. */}\n        <i onClick={()=>SetToDos([...toDos,{ id:Date.now(),text: toDo, status:false}])} className=\"fas fa-plus\"></i>\n        {/* date.now() using as an index to identify the data */}\n      </div>\n      <div className=\"todos\">\n        { \n        toDos.map((obj)=>{ \n          //This help to\n        return ( <div className=\"todo\">\n          <div className=\"left\">\n            <input onChange={(e)=>{\n              console.log(e.target.checked)\n              console.log(obj)\n          SetToDos(toDos.filter(obj2=>{\n          if(obj2.id===obj.id){\n            obj2.status=e.target.checked\n          }\n          return obj2\n        }))\n          }}value={obj.status} type=\"checkbox\" name=\"\" id=\"\" />\n            <p>{obj.text}</p>\n            {/* Here we use .text , because the the object has a value, to get the specified text by using .text */}\n          </div>\n          <div className=\"right\">\n            <i className=\"fas fa-times\"></i>\n          </div>\n        </div>)\n        }\n        )\n        }\n        {toDos.map((obj)=>{\n          if(obj.status){\n            return(<h1>{obj.text}</h1>)\n          }\n          return null\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}